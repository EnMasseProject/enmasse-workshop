- name: Create standard-authservice certificates
  include_role:
    name: ssl_certs
  vars:
    cert_secret: standard-authservice-cert
    cert_cn: "standard-authservice.{{ namespace }}.svc.cluster.local"
    cert_sans: "DNS:standard-authservice.{{ namespace }}.svc.cluster,DNS:standard-authservice.{{ namespace }}.svc,DNS:standard-authservice"
- name: Check if keycloak credentials secret exists
  shell: oc get secret -n {{ namespace }} keycloak-credentials
  register: secret_exists
  ignore_errors: True
- name: Create secret with the keycloak credentials
  when: secret_exists.failed
  shell: oc create secret generic -n {{ namespace }} keycloak-credentials --from-literal=admin.username=admin --from-literal=admin.password={{ keycloak_admin_password }}
- name: Give view permissions for the keycloak controller
  shell: oc adm policy add-role-to-user view system:serviceaccount:{{ namespace }}:default
- name: Create the standard authentication service
  shell: oc process -f {{ playbook_dir }}/templates/addons/standard-authservice.yaml | oc apply -n {{ namespace }} -f -
- name: Check if keycloak config exists
  shell: oc get configmap -n {{ namespace }} keycloak-config
  register: config_exists
  ignore_errors: True

- name: Retrieve service cluster ip
  when: config_exists.failed and (keycloak_http_url is not defined)
  shell: oc get service -n {{ namespace }} standard-authservice -o jsonpath={.spec.clusterIP}
  register: authservice_clusterip
- set_fact:
    keycloak_http_url: "https://{{ authservice_clusterip.stdout }}:8443/auth"
  when: config_exists.failed and (keycloak_http_url is not defined)

- name: Create OAUTH service account
  shell: oc create sa -n {{ namespace }} kc-oauth
- name: Annotate OAUTH service account
  shell: oc annotate sa -n {{ namespace }} kc-oauth serviceaccounts.openshift.io/oauth-redirecturi.first={{ keycloak_http_url }}
- shell: oc sa get-token -n {{ namespace }} kc-oauth
  register: token_result
- set_fact:
    oauth_token: "{{ token_result.stdout }}"

- name: Create configmap with the keycloak info
  when: config_exists.failed and (keycloak_http_url is defined)
  shell: oc create configmap keycloak-config -n {{ namespace }} --from-literal=hostname=standard-authservice.{{ namespace }}.svc --from-literal=port=5671 --from-literal=caSecretName=standard-authservice-cert --from-literal=httpUrl={{ keycloak_http_url }} --from-literal=identityProviderClientId=system:serviceaccount:{{ namespace }}:kc-oauth --from-literal=identityProviderClientSecret={{ oauth_token }}
