---
- name: Ensure python OpenSSL dependencies are installed.
  pip:
    name: pyOpenSSL
    state: present
- name: Check if secret exists
  shell: oc get secret -n {{ namespace }} {{ cert_secret }}
  register: secret_exists
  ignore_errors: True
- name: Create temp folder for certificates
  when: secret_exists.failed
  register: cert_temp
  tempfile:
    state: directory
- name: Generate an OpenSSL private key
  when: secret_exists.failed
  openssl_privatekey:
    path: "{{ cert_temp.path }}/tls.key"
- name: Generate an OpenSSL CSR
  when: secret_exists.failed
  openssl_csr:
    path: "{{ cert_temp.path }}/tls.csr"
    privatekey_path: "{{ cert_temp.path }}/tls.key"
    common_name: "{{ cert_cn }}"
    organization_name: "io.enmasse"
    subject_alt_name: "{{ cert_sans }}"
- name: Generate a  Self Signed OpenSSL Certificate
  when: secret_exists.failed
  openssl_certificate:
    path: "{{ cert_temp.path }}/tls.crt"
    privatekey_path: "{{ cert_temp.path }}/tls.key"
    csr_path: "{{ cert_temp.path }}/tls.csr"
    provider: selfsigned
- name: Create a secret containing the certificate
  shell: oc create secret tls {{ cert_secret }} -n {{ namespace }} --cert="{{ cert_temp.path }}/tls.crt" --key="{{ cert_temp.path }}/tls.key"
  when: secret_exists.failed
